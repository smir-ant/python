# ZeroDivisionError
# x = 5/0

# TypeError
#  = "–∞" + 15

# IndexError
# x = [0, -15, "–ê–Ω—Ç–æ–Ω"]
# x[3]

# SyntaxError
# if 5 == 4
#     print()

# NameError
# print(x2)

# assert --> AssertionError
# def summa(numbers):
#     return sum(numbers)
#
#
# assert summa([1, 2]) == 3
# assert summa([1, 2]) == 4


# try - –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è
# except - –æ—Ç–ª–∞–≤–ª–∏–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π.
# esle - –∏–Ω–∞—á–µ, –µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ –±—ã–ª–æ ( –µ—Å–ª–∏ –≤—Å—ë —Ö–æ—Ä–æ—à–æ )
# finally - –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ

# try:
#     number = int(input())
#     x = 5 / number
# except ZeroDivisionError:
#     print("–°–ª—ã—à—å —Ç—ã, –Ω–∏–∑—è –Ω–∞ –Ω—É–ª—å –¥–µ–ª–∏—Ç—å")
# except ValueError:
#     print("–•–æ—á—É —Ü–∏—Ñ–∏—Ä–∫–∏")
# except Exception:  # –ª—é–±–∞—è –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
#     print("–ë–ª–∏–Ω, —Ç—ã –æ—à–∏–±—Å—è, –ø–æ–ª—É—á–∞–µ—Ç—Å—è!")
# else:  # else - –∫–æ–≥–¥–∞ –≤—Å—ë —Ö–æ—Ä–æ—à–æ ü•∞
#     print("–Ø –ø–æ–¥–µ–ª–∏–≤ üëâüëà")
# finally:
#     print("–ú–µ–Ω—è –Ω–∞–ø–∏—Å–∞–ª –ê–Ω—Ç–æ–Ω. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.")
#
# print("–Ø –∑–∞–∫–æ–Ω—á–∏–ª —Ä–∞–±–æ—Ç–∞—Ç—å.")


# PASS
# try:
#     number = int(input())
#     x = 5 / number
# except Exception:
#     pass  # –∑–∞—Ç—ã—á–∫–∞. –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç.

# if 5 == 5:
#     pass  # TODO: –∫—É–ø–∏—Ç—å –º–æ–ª–æ–∫–∞ –∏ –¥–æ–ø–∏—Å–∞—Ç—å –∫–æ–¥

# try:
#     x = input("–í–≤–µ–¥–∏ –∏–º—è:")
#     if x == "–ê–Ω—Ç–æ–Ω":
#         raise Exception("–ê–Ω—Ç–æ–Ω–∞ –≤ –æ–±–∏–¥—É –Ω–µ –¥–∞–º")
#         # raise - –≤—ã–∑–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –æ—à–∏–±–∫—É
# except Exception as error_message:
#     # as - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—à–∏–±–∫—É –≤ error_message
#     print("–≠—Ç–æ —Å–ª–æ–≤–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ!", error_message)


ints = []
try:
    f = open("text.txt")
except FileNotFoundError:
    print("–ù—É, –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å üòí")
else:
    try:
        for line in f:
            ints.append(int(line))
    except ValueError:
        print("–¢—É—Ç –Ω–µ —á–∏—Å–ª–æ, –∑–∞–∫—Ä–æ–π –∑–∞ –º–Ω–æ–π –¥–≤–µ—Ä—å, —è —É—Ö–æ–∂—É.")
    else:  # –µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç—å
        print(ints)
    finally: # –≤–∞—â–µ –≤—Å–µ–≥–¥–∞
        f.close()
        print("–Ø –∑–∞–∫—Ä—ã–≤ —Ñ–∞–µ–ª üòÉ")